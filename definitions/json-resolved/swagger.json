{
  "swagger" : "2.0",
  "info" : {
    "description" : "Last Updated: 2021-07-08",
    "version" : "1.0.0",
    "title" : "BackOffice API"
  },
  "host" : "api.infinicept.com",
  "basePath" : "/api",
  "schemes" : [ "https" ],
  "paths" : {
    "/{tenantId}/adjustments" : {
      "get" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Request All Adjustments",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AdjustmentType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "TransferTo", "TransferFrom" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/AdjustmentPaginatedResponse"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Create a Manual Adjustment",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/AdjustmentRequest"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/CommandInfoResponse"
              }
            }
          }
        }
      }
    },
    "/{tenantId}/adjustments/{id}" : {
      "get" : {
        "tags" : [ "Adjustments" ],
        "summary" : "Request Adjustment by ID",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "id",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Adjustment"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/paginated" : {
      "get" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Review Paginated Chargebacks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "New", "RetrievalNew", "Chargeback", "ChargebackReversal" ]
        }, {
          "name" : "Network",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "Visa", "MasterCard", "AmericanExpress", "Discover", "JCB", "Europay", "PrivateLabel", "PayPal", "JackHenryACH", "DinersClubInternational", "Debit", "ACH", "ChinaUnionPay", "Adjustment" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Arn",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardBin",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardLastFour",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CaseId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ReasonCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "MinAmount",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "MaxAmount",
          "in" : "query",
          "required" : false,
          "type" : "number",
          "format" : "double"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionDateFilter",
          "in" : "query",
          "description" : "The date the transaction record was created in Infinicept.",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "TransactionFromDate",
          "in" : "query",
          "description" : "<b>TransactionDateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "TransactionToDate",
          "in" : "query",
          "description" : "<b>TransactionDateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "TransactionSpecificDate",
          "in" : "query",
          "description" : "<b>TransactionDateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "ChargebackDateFilter",
          "in" : "query",
          "description" : "The date the chargeback record was created in Infinicept.",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "ChargebackFromDate",
          "in" : "query",
          "description" : "<b>ChargebackDateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ChargebackToDate",
          "in" : "query",
          "description" : "<b>ChargebackDateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ChargebackSpecificDate",
          "in" : "query",
          "description" : "<b>ChargebackDateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "LastUpdatedDateFilter",
          "in" : "query",
          "description" : "The date the chargeback record was updated in the Infinicept portal.",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "LastUpdatedFromDate",
          "in" : "query",
          "description" : "<b>LastUpdatedDateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "LastUpdatedToDate",
          "in" : "query",
          "description" : "<b>LastUpdatedDateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "LastUpdatedSpecificDate",
          "in" : "query",
          "description" : "<b>LastUpdatedDateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "AccountStatus",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Active", "HoldAllFunding", "Canceled", "WaitingForFirstTrans", "WaitingForFirstAuth", "Deleted" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DBAName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "LegalEntityName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Mid",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Cobrand",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Location",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/ChargebackPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/{chargebackId}" : {
      "get" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Review a Single Chargeback",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Chargeback"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/documents/{chargebackId}" : {
      "get" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Review a Chargeback's Documents",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ChargebackDocument"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Upload Chargeback Document",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/DocumentUpload"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/documents/{chargebackId}/{documentId}" : {
      "get" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Review a Chargeback's Document",
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "documentId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/documents/delete/{documentId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Delete a Chargeback Document",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "documentId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/messageblock/{chargebackId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Create a Chargeback Member Message Block",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddNote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/messageblock/update/{messageBlockId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Update a Chargeback Member Message Block",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "messageBlockId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddNote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/messageblock/delete/{messageBlockId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Delete a Chargeback Member Message Block",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "messageBlockId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/changestatus/{chargebackId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Change a Chargeback Status",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "status",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "Unassigned", "Assigned", "SubmerchantContacted", "DocumentationReceived", "DocumentationSentToProcessor", "CaseClosed" ]
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/notes/{chargebackId}" : {
      "get" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Review a Chargeback Note",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ChargebackNote"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Create a Chargeback Note",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddNote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/notes/update/{noteId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Update Chargeback Note",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddNote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/notes/delete/{noteId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Delete a Chargeback Note",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "noteId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/notification/{settingsId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Update Chargeback Notifications Setting",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "settingsId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/notification/chargeback/{chargebackId}" : {
      "post" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Create a Notification to Submerchant for a Single Chargeback",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "senderEmail",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/Chargebacks/history/{chargebackId}" : {
      "get" : {
        "tags" : [ "Chargebacks" ],
        "summary" : "Review Chargeback History",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "chargebackId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/ChargebackHistoryRecord"
              }
            }
          }
        }
      }
    },
    "/{tenantId}/commands/{commandFingerprint}" : {
      "get" : {
        "tags" : [ "Commands" ],
        "summary" : "Request Status of Queued Request",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "commandFingerprint",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "uuid"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/api/Diagnostics/heartbeat" : {
      "get" : {
        "tags" : [ "Diagnostics" ],
        "summary" : "Diagnostics_GetHeartbeat",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    },
    "/{tenantId}/fundinginstructions" : {
      "post" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "Create Deposit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/fundinginstructions/paged" : {
      "get" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "Review Paginated Deposits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "summaryOnly",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Status",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "New", "Submitted", "Funded", "PartiallyRejected", "Rejected" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Type",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Transactions", "Fees", "BankTransfers", "ChargebackToOperatingTransfer", "AchReturnToOperatingTransfer" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FundingDepositPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/fundinginstructions/{depositId}" : {
      "get" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "Review Single Deposit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "depositId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "summaryOnly",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FundingDeposit"
            }
          }
        }
      },
      "post" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "Submit Deposit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "depositId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "includeInactiveSubmerchants",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/fundinginstructions/submerchantdeposits/{submerchantId}" : {
      "get" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "Review submitted deposits for a Submerchant.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Status",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "New", "Submitted", "Funded", "PartiallyRejected", "Rejected" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Type",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Transactions", "Fees", "BankTransfers", "ChargebackToOperatingTransfer", "AchReturnToOperatingTransfer" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "FundingDepositId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubmerchantDepositPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/fundinginstructions/createandsubmit" : {
      "post" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "Review and Submit Deposits",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/fundinginstructions/bankaccounts" : {
      "get" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "View Bank Accounts",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/TenantBankAccountResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "Transfer Funds Between Accounts",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BankAccountTransfer"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/fundinginstructions/dailydeposits/paged/{submerchantId}" : {
      "get" : {
        "tags" : [ "FundingInstructions" ],
        "summary" : "View Daily Deposit by Submerchant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/DailySubmerchantDepositSummaryPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/fundingreturns" : {
      "get" : {
        "tags" : [ "FundingReturn" ],
        "summary" : "Review all Funding Returns/Failures",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SourceDataFileId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Amount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Fee",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Date",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ReasonCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AddendaInfo",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DepositId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantDepositId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantDbaName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ReturnStatus",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "OnHold", "Resolved", "NotificationOfChange" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FundingReturnPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/{submerchantId}" : {
      "get" : {
        "tags" : [ "Merchant" ],
        "summary" : "Review Submerchant Information",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "includeUsers",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "includeChildren",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Submerchant"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/identifier/{submerchantIdentifier}" : {
      "get" : {
        "tags" : [ "Merchant" ],
        "summary" : "Review Submerchant Information by Identifier",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Submerchant"
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Merchant" ],
        "summary" : "Disable a Submerchant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantIdentifier",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/paginated" : {
      "get" : {
        "tags" : [ "Merchant" ],
        "summary" : "View Paginated Submerchants",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "summaryOnly",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "AccountStatus",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Active", "HoldAllFunding", "Canceled", "WaitingForFirstTrans", "WaitingForFirstAuth", "Deleted" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DBAName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "LegalEntityName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Mid",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Cobrand",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Location",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "fundingSchedule",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "items" : { }
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Submerchant"
              }
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/MIDSummariesPaginated" : {
      "get" : {
        "tags" : [ "Merchant" ],
        "summary" : "Review Paginated MID Summaries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "noMID",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "parentId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "default" : "false",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubmerchantMIDSummaryPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/{submerchantId}/hold" : {
      "put" : {
        "tags" : [ "Merchant" ],
        "summary" : "Hold a Submerchant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/{submerchantId}/release" : {
      "put" : {
        "tags" : [ "Merchant" ],
        "summary" : "Release a Held Submerchant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/{submerchantId}/identifiers" : {
      "put" : {
        "tags" : [ "Merchant" ],
        "summary" : "Add Submerchant Boarding Ids",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpdateSubmerchantIDs"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/board" : {
      "post" : {
        "tags" : [ "Merchant" ],
        "summary" : "Board a Submerchant",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/BoardSubmerchantRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/firstauth" : {
      "post" : {
        "tags" : [ "Merchant" ],
        "summary" : "Update Merchant to First Auth",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/{tenantId}/merchant/firsttrans" : {
      "post" : {
        "tags" : [ "Merchant" ],
        "summary" : "Update Merchant to First Transaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "boolean"
            }
          }
        }
      }
    },
    "/{tenantId}/pendingdeposits" : {
      "get" : {
        "tags" : [ "PendingDeposits" ],
        "summary" : "Review Unfunded Transaction Totals by Submerchant and Settled Date",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "FundingProgram",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "NextDay", "SameDay" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionsSettledDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "summaryOnly",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PendingDepositPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/pendingdeposits/overviews" : {
      "get" : {
        "tags" : [ "PendingDeposits" ],
        "summary" : "Review Unfunded Transaction Totals Grouped by Funding Program Type",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/PendingDepositsOverview"
              }
            }
          }
        }
      }
    },
    "/{tenantId}/pendingdeposits/overviews/{fundingProgramId}" : {
      "get" : {
        "tags" : [ "PendingDeposits" ],
        "summary" : "Review Unfunded Transaction Summary by Funding Program Type",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "fundingProgramId",
          "in" : "path",
          "description" : "0 NextDay, 1 SameDay",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PendingDepositDailyOverviewPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/pendingdeposits/submerchant-overviews/{fundingProgramId}" : {
      "get" : {
        "tags" : [ "PendingDeposits" ],
        "summary" : "Review Unfunded Transaction Summary by Submerchant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "fundingProgramId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "sortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "submerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PendingDepositSubmerchantOverviewPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/pendingdeposits/hold" : {
      "put" : {
        "tags" : [ "PendingDeposits" ],
        "summary" : "Hold Deposit From Funding",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PendingDepositsFilter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/pendingdeposits/release" : {
      "put" : {
        "tags" : [ "PendingDeposits" ],
        "summary" : "Release Deposit For Funding",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/PendingDepositsFilter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View All Exception Reports",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Resolved",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "BatchId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AffectedTransactionId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DefinitionId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExceptionLogicType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "FirstTransactionProcessed", "TransactionOverMaximum", "DailyDepositOverMaximum", "ForeignCardPercentageOverLimit", "MultipleRefundsToSameCard", "ExcessiveRefundVolumeInBatch", "ExcessiveRefundCountPercentage", "ExcessivePercentageOfKeyedTransactions", "OutOfPatternLowDollarTransaction", "RefundGreaterThanMaxAllowed", "RefundWithoutOffsettingSale", "ExcessiveForcedTransactions", "FallbackTransaction", "HighPercentageOfChargebacks", "LargeChargeback", "RefundAfterChargeback", "ProcessingApproachingApprovedMonthlyLimit", "ExcessiveProcessing", "DormantSubmerchantActive", "MultipleAuthorizationsToSameCard", "MultipleSettledTransactionsToSameCard", "IndividualTicketGreaterThanDollarAmount", "HighPercentageOfRetrievals", "LargeRetrieval", "SameDollarAmountInBatch", "TotalDailyAuthorizationCountOverMaximum", "DeclinedDailyAuthorizationOverMaximumPercent", "LowDollarBatch", "AuthorizationDuringAbnormalHours", "TransactionDuringAbnormalHours", "OutOfPatternDailyAuthorizationCount" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExceptionDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RiskException"
              }
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions/paginated" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View Paginated Exception Reports",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Resolved",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "BatchId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AffectedTransactionId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DefinitionId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExceptionLogicType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "FirstTransactionProcessed", "TransactionOverMaximum", "DailyDepositOverMaximum", "ForeignCardPercentageOverLimit", "MultipleRefundsToSameCard", "ExcessiveRefundVolumeInBatch", "ExcessiveRefundCountPercentage", "ExcessivePercentageOfKeyedTransactions", "OutOfPatternLowDollarTransaction", "RefundGreaterThanMaxAllowed", "RefundWithoutOffsettingSale", "ExcessiveForcedTransactions", "FallbackTransaction", "HighPercentageOfChargebacks", "LargeChargeback", "RefundAfterChargeback", "ProcessingApproachingApprovedMonthlyLimit", "ExcessiveProcessing", "DormantSubmerchantActive", "MultipleAuthorizationsToSameCard", "MultipleSettledTransactionsToSameCard", "IndividualTicketGreaterThanDollarAmount", "HighPercentageOfRetrievals", "LargeRetrieval", "SameDollarAmountInBatch", "TotalDailyAuthorizationCountOverMaximum", "DeclinedDailyAuthorizationOverMaximumPercent", "LowDollarBatch", "AuthorizationDuringAbnormalHours", "TransactionDuringAbnormalHours", "OutOfPatternDailyAuthorizationCount" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExceptionDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RiskExceptionPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions/{riskExceptionId}" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View Exception Reports by Risk Exception Id",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "riskExceptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RiskException"
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions/submerchantbatchexceptionsummaries" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View Exception Report Summaries",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "fundingSchedule",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "PayfacFunded", "ProcessorFunded", "PayFacFundedSameDay" ]
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubmerchantRiskExceptionBatchSummaryPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions/submerchantbatchexceptionsummary/{submerchantId}/{riskExceptionBatchDate}" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View a Single Submerchant Batch Risk Exception Summary",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "riskExceptionBatchDate",
          "in" : "path",
          "required" : true,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/SubmerchantRiskExceptionBatchDetail"
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions/definitions" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View Exception Report Definintions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "IsActive",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "IsTenantDefinition",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ActivateDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DeactivateDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExceptionLogicType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "FirstTransactionProcessed", "TransactionOverMaximum", "DailyDepositOverMaximum", "ForeignCardPercentageOverLimit", "MultipleRefundsToSameCard", "ExcessiveRefundVolumeInBatch", "ExcessiveRefundCountPercentage", "ExcessivePercentageOfKeyedTransactions", "OutOfPatternLowDollarTransaction", "RefundGreaterThanMaxAllowed", "RefundWithoutOffsettingSale", "ExcessiveForcedTransactions", "FallbackTransaction", "HighPercentageOfChargebacks", "LargeChargeback", "RefundAfterChargeback", "ProcessingApproachingApprovedMonthlyLimit", "ExcessiveProcessing", "DormantSubmerchantActive", "MultipleAuthorizationsToSameCard", "MultipleSettledTransactionsToSameCard", "IndividualTicketGreaterThanDollarAmount", "HighPercentageOfRetrievals", "LargeRetrieval", "SameDollarAmountInBatch", "TotalDailyAuthorizationCountOverMaximum", "DeclinedDailyAuthorizationOverMaximumPercent", "LowDollarBatch", "AuthorizationDuringAbnormalHours", "TransactionDuringAbnormalHours", "OutOfPatternDailyAuthorizationCount" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/RiskExceptionDefinition"
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "RiskException" ],
        "summary" : "Create/Update an Exception Report",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/UpsertDefinitionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions/definitions/paginated" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View Paginated Exception Report Definitions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "IsActive",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "IsTenantDefinition",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ActivateDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DeactivateDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExceptionLogicType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "FirstTransactionProcessed", "TransactionOverMaximum", "DailyDepositOverMaximum", "ForeignCardPercentageOverLimit", "MultipleRefundsToSameCard", "ExcessiveRefundVolumeInBatch", "ExcessiveRefundCountPercentage", "ExcessivePercentageOfKeyedTransactions", "OutOfPatternLowDollarTransaction", "RefundGreaterThanMaxAllowed", "RefundWithoutOffsettingSale", "ExcessiveForcedTransactions", "FallbackTransaction", "HighPercentageOfChargebacks", "LargeChargeback", "RefundAfterChargeback", "ProcessingApproachingApprovedMonthlyLimit", "ExcessiveProcessing", "DormantSubmerchantActive", "MultipleAuthorizationsToSameCard", "MultipleSettledTransactionsToSameCard", "IndividualTicketGreaterThanDollarAmount", "HighPercentageOfRetrievals", "LargeRetrieval", "SameDollarAmountInBatch", "TotalDailyAuthorizationCountOverMaximum", "DeclinedDailyAuthorizationOverMaximumPercent", "LowDollarBatch", "AuthorizationDuringAbnormalHours", "TransactionDuringAbnormalHours", "OutOfPatternDailyAuthorizationCount" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/RiskExceptionDefinitionPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/riskexceptions/notes/{riskExceptionId}" : {
      "get" : {
        "tags" : [ "RiskException" ],
        "summary" : "View Exception Report Notes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "riskExceptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Note"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "RiskException" ],
        "summary" : "Create Exception Report Notes",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "riskExceptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddNote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review All Transactions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ARN",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationSource",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationResponse",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantBatchId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Currency",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardBin",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardLastFour",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Network",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "Visa", "MasterCard", "AmericanExpress", "Discover", "JCB", "Europay", "PrivateLabel", "PayPal", "JackHenryACH", "DinersClubInternational", "Debit", "ACH", "ChinaUnionPay", "Adjustment" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "IssuingBankID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeFee",
          "in" : "query",
          "description" : "The Interchange fee amount reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "NetworkFees",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorFee",
          "in" : "query",
          "description" : "The fee amount assessed by the Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AssessmentFee",
          "in" : "query",
          "description" : "The Assessment fee amount charged by MasterCard and Visa, reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacFee",
          "in" : "query",
          "description" : "The fee charged to merchant by Infinicept client. Calculated on import using merchant Fee Profile information and reported by Infinicept.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SourceDataEventId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorMID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Deposit", "Refund", "Chargeback", "ACHFee", "ACHDeposit", "MonthlyFee", "ChargebackReversal", "Decline", "AVSOnly", "Unknown", "AdjustmentFrom", "AdjustmentTo", "ACHReturn", "Fee (CSV Fee Upload entry)" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "OnHold",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TerminalId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "FundingStatus",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "New", "Submitted", "Funded", "AuthOnly", "Rejected", "Declined", "Conveyed", "Held", "Captured", "Processing", "Incomplete" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorTransactionID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantDbaName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExtendedData",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeLevel",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "GatewayReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PartnerReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DepositId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizedDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacSettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AdjustmentId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DiscretionaryField",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "includeIncomplete",
          "in" : "query",
          "description" : "Adyen Only. Include incomplete transactions, waiting for additional data from Adyen reports.",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Create a Transaction",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TransactionRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/paginated" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review Paginated Transactions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ARN",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationSource",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationResponse",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantBatchId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Currency",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardBin",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardLastFour",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Network",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "Visa", "MasterCard", "AmericanExpress", "Discover", "JCB", "Europay", "PrivateLabel", "PayPal", "JackHenryACH", "DinersClubInternational", "Debit", "ACH", "ChinaUnionPay", "Adjustment" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "IssuingBankID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeFee",
          "in" : "query",
          "description" : "The Interchange fee amount reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "NetworkFees",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorFee",
          "in" : "query",
          "description" : "The fee amount assessed by the Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AssessmentFee",
          "in" : "query",
          "description" : "The Assessment fee amount charged by MasterCard and Visa, reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacFee",
          "in" : "query",
          "description" : "The fee charged to merchant by Infinicept client. Calculated on import using merchant Fee Profile information and reported by Infinicept.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SourceDataEventId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorMID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Deposit", "Refund", "Chargeback", "ACHFee", "ACHDeposit", "MonthlyFee", "ChargebackReversal", "Decline", "AVSOnly", "Unknown", "AdjustmentFrom", "AdjustmentTo", "ACHReturn", "Fee (CSV Fee Upload entry)" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "OnHold",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TerminalId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "FundingStatus",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "New", "Submitted", "Funded", "AuthOnly", "Rejected", "Declined", "Conveyed", "Held", "Captured", "Processing", "Incomplete" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorTransactionID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantDbaName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExtendedData",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeLevel",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "GatewayReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PartnerReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DepositId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizedDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacSettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AdjustmentId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DiscretionaryField",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "includeIncomplete",
          "in" : "query",
          "required" : false,
          "type" : "boolean"
        }, {
          "name" : "includeTotalCount",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : true
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/PaginatedTransactionResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/{transactionId}" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review a Transaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Transaction"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/identifier" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review a Transaction Using Gateway and Partner Reference Numbers",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "gatewayReferenceNumber",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partnerReferenceNumber",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "transactionIdentifier",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/Transaction"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/{transactionId}/hold" : {
      "put" : {
        "tags" : [ "Transaction" ],
        "summary" : "Hold a Transaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/{transactionId}/release" : {
      "put" : {
        "tags" : [ "Transaction" ],
        "summary" : "Release a Transaction",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/updateStatus" : {
      "put" : {
        "tags" : [ "Transaction" ],
        "summary" : "Manual Transaction Status Change",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "infiniceptId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "partnerReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "updatedStatus",
          "in" : "query",
          "description" : "Allowed Values: Captured, Processing, Funded",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/holdmultiple" : {
      "put" : {
        "tags" : [ "Transaction" ],
        "summary" : "Hold Multiple Transactions",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/holdmultiple/filter" : {
      "put" : {
        "tags" : [ "Transaction" ],
        "summary" : "Place multiple transactions on hold with filtering",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TransactionFilter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/releasemultiple" : {
      "put" : {
        "tags" : [ "Transaction" ],
        "summary" : "Release Multiple Transactions",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/releasemultiple/filter" : {
      "put" : {
        "tags" : [ "Transaction" ],
        "summary" : "Release Transactions to Fund",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/TransactionFilter"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/submerchant/{submerchantId}" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review All Transaction for a Submerchant",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "submerchantId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/deposit/{depositId}" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review A Deposit",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "depositId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Transaction"
              }
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/fundable" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review all funable transactions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ARN",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationSource",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationResponse",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantBatchId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Currency",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardBin",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardLastFour",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Network",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "Visa", "MasterCard", "AmericanExpress", "Discover", "JCB", "Europay", "PrivateLabel", "PayPal", "JackHenryACH", "DinersClubInternational", "Debit", "ACH", "ChinaUnionPay", "Adjustment" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "IssuingBankID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeFee",
          "in" : "query",
          "description" : "The Interchange fee amount reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "NetworkFees",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorFee",
          "in" : "query",
          "description" : "The fee amount assessed by the Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AssessmentFee",
          "in" : "query",
          "description" : "The Assessment fee amount charged by MasterCard and Visa, reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacFee",
          "in" : "query",
          "description" : "The fee charged to merchant by Infinicept client. Calculated on import using merchant Fee Profile information and reported by Infinicept.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SourceDataEventId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorMID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Deposit", "Refund", "Chargeback", "ACHFee", "ACHDeposit", "MonthlyFee", "ChargebackReversal", "Decline", "AVSOnly", "Unknown", "AdjustmentFrom", "AdjustmentTo", "ACHReturn", "Fee (CSV Fee Upload entry)" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "OnHold",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TerminalId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "FundingStatus",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "New", "Submitted", "Funded", "AuthOnly", "Rejected", "Declined", "Conveyed", "Held", "Captured", "Processing", "Incomplete" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorTransactionID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantDbaName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExtendedData",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeLevel",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "GatewayReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PartnerReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DepositId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizedDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacSettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AdjustmentId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DiscretionaryField",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CurrentPage",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "PageSize",
          "in" : "query",
          "required" : false,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "FieldName",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "SortOrder",
          "in" : "query",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "includeHeld",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "excludeRejected",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/TransactionPaginatedResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/fundable/counts" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Review count of funable transactions",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "Id",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ARN",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationSource",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationResponse",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizationAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionAmount",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantBatchId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Currency",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardBin",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardLastFour",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "CardType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "Network",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Unknown", "Visa", "MasterCard", "AmericanExpress", "Discover", "JCB", "Europay", "PrivateLabel", "PayPal", "JackHenryACH", "DinersClubInternational", "Debit", "ACH", "ChinaUnionPay", "Adjustment" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "IssuingBankID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeFee",
          "in" : "query",
          "description" : "The Interchange fee amount reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "NetworkFees",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorFee",
          "in" : "query",
          "description" : "The fee amount assessed by the Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AssessmentFee",
          "in" : "query",
          "description" : "The Assessment fee amount charged by MasterCard and Visa, reported by Processor.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacFee",
          "in" : "query",
          "description" : "The fee charged to merchant by Infinicept client. Calculated on import using merchant Fee Profile information and reported by Infinicept.",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SourceDataEventId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorMID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TransactionType",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "Deposit", "Refund", "Chargeback", "ACHFee", "ACHDeposit", "MonthlyFee", "ChargebackReversal", "Decline", "AVSOnly", "Unknown", "AdjustmentFrom", "AdjustmentTo", "ACHReturn", "Fee (CSV Fee Upload entry)" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "OnHold",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "boolean"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "TerminalId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "FundingStatus",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "enum" : [ "New", "Submitted", "Funded", "AuthOnly", "Rejected", "Declined", "Conveyed", "Held", "Captured", "Processing", "Incomplete" ]
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ProcessorTransactionID",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SubmerchantDbaName",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "ExtendedData",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeCode",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "InterchangeLevel",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "GatewayReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PartnerReferenceId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DepositId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AuthorizedDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "PayfacSettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "SettlementDate",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "AdjustmentId",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DiscretionaryField",
          "in" : "query",
          "required" : false,
          "type" : "array",
          "items" : {
            "type" : "string"
          },
          "collectionFormat" : "multi"
        }, {
          "name" : "DateFilter",
          "in" : "query",
          "required" : false,
          "type" : "string",
          "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
        }, {
          "name" : "DateFilterType",
          "in" : "query",
          "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
          "required" : false,
          "type" : "string",
          "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
        }, {
          "name" : "FromDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "ToDate",
          "in" : "query",
          "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "SpecificDate",
          "in" : "query",
          "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
          "required" : false,
          "type" : "string",
          "format" : "date-time"
        }, {
          "name" : "includeHeld",
          "in" : "query",
          "required" : false,
          "type" : "boolean",
          "default" : false
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/FundableTransactionCount"
            }
          }
        }
      }
    },
    "/{tenantId}/transactions/{transactionId}/notes" : {
      "get" : {
        "tags" : [ "Transaction" ],
        "summary" : "Get Transaction Notes",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/Note"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Transaction" ],
        "summary" : "Create a Transaction Note",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "transactionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/AddNote"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/webhooks" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Review all webhooks",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/WebhookSubscriptionResponse"
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Create a webhook",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WriteWebhookSubscription"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    },
    "/{tenantId}/webhooks/{subscriptionId}" : {
      "get" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Review a single webhook",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/WebhookSubscriptionResponse"
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Webhooks" ],
        "summary" : "Update Webhook",
        "consumes" : [ "application/json-patch+json", "application/json", "text/json", "application/*+json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "x-AuthenticationKeyId",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "x-AuthenticationKeyValue",
          "in" : "header",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        }, {
          "name" : "tenantId",
          "in" : "path",
          "required" : true,
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/WriteWebhookSubscription"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success",
            "schema" : {
              "$ref" : "#/definitions/CommandInfoResponse"
            }
          }
        }
      }
    }
  },
  "definitions" : {
    "AdjustmentType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "1 TransferTo, 2 TransferFrom.",
      "enum" : [ "1", "2" ]
    },
    "Adjustment" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "adjustmentType" : {
          "$ref" : "#/definitions/AdjustmentType"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "submerchantCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "total" : {
          "type" : "number",
          "format" : "double"
        },
        "user" : {
          "type" : "string"
        },
        "memo" : {
          "type" : "string"
        },
        "submerchantIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    },
    "AdjustmentPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Adjustment"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "AccountStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Active, 1 HoldAllFunding, 2 Canceled, 3 WaitingForFirstTrans, 4 WaitingForFirstAuth, 99 Deleted",
      "enum" : [ "0", "1", "2", "3", "4", "99" ],
      "x-ms-enum" : {
        "name" : "AccountStatus",
        "modelAsString" : false
      }
    },
    "SubmerchantFilter" : {
      "type" : "object",
      "properties" : {
        "accountStatus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/AccountStatus"
          }
        },
        "dbaName" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "legalEntityName" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "mid" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "id" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "cobrand" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "location" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "AdjustmentRequest" : {
      "type" : "object",
      "properties" : {
        "submerchantFilter" : {
          "$ref" : "#/definitions/SubmerchantFilter"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "adjustmentType" : {
          "$ref" : "#/definitions/AdjustmentType"
        },
        "user" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 255
        },
        "memo" : {
          "type" : "string",
          "minLength" : 0,
          "maxLength" : 255
        }
      }
    },
    "CommandStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Processing, 1 Completed, 2 Failed, 3 Canceled",
      "enum" : [ "0", "1", "2", "3" ],
      "x-ms-enum" : {
        "name" : "CommandStatus",
        "modelAsString" : false
      }
    },
    "CommandInfoResponse" : {
      "type" : "object",
      "properties" : {
        "commandFingerprint" : {
          "type" : "string",
          "format" : "uuid"
        },
        "status" : {
          "$ref" : "#/definitions/CommandStatus"
        },
        "createTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "endTime" : {
          "type" : "string",
          "format" : "date-time"
        },
        "error" : {
          "type" : "string"
        },
        "message" : {
          "type" : "string"
        }
      }
    },
    "ChargebackStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "1 New, 4 Won, 11 PreArbitrationArbitration, 12 RetrievalNew (Documentation Requested), 14 Chargeback, 15 ChargebackReversal",
      "enum" : [ "1", "4", "11", "12", "14", "15" ],
      "x-ms-enum" : {
        "name" : "ChargebackStatus",
        "modelAsString" : false
      }
    },
    "ChargebackWorkflowStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Unassigned, 1 Assigned, 2 SubmerchantContacted, 3 DocumentationReceived, 4 DocumentationSentToProcessor, 5 CaseClosed",
      "enum" : [ "0", "1", "2", "3", "4", "5" ],
      "x-ms-enum" : {
        "name" : "ChargebackWorkflowStatus",
        "modelAsString" : false
      }
    },
    "MerchantIdentifierKeyValuePair" : {
      "type" : "object",
      "properties" : {
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "NoteType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 NoteInternal, 1 NotePublic",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "NoteType",
        "modelAsString" : false
      }
    },
    "ChargebackNote" : {
      "type" : "object",
      "properties" : {
        "chargebackId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isMessageBlock" : {
          "type" : "boolean"
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "$ref" : "#/definitions/NoteType"
        },
        "createdBy" : {
          "type" : "string"
        }
      }
    },
    "ChargebackDocument" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "path" : {
          "type" : "string"
        },
        "name" : {
          "type" : "string"
        },
        "documentType" : {
          "type" : "string"
        },
        "documentTypeName" : {
          "type" : "string"
        },
        "chargebackId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "username" : {
          "type" : "string"
        },
        "userEmail" : {
          "type" : "string"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "dateLocal" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "CardNetwork" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Unknown, 1 Visa, 2 MasterCard, 3 AmericanExpress, 4 Discover, 5 JCB, 6 Europay, 7 PrivateLabel, 8 PayPal, 9 JackHenryACH, 10 DinersClubInternational, 11 Debit, 12 ACH, 13 ChinaUnionPay, 14 Adjustment",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14" ],
      "x-ms-enum" : {
        "name" : "CardNetwork",
        "modelAsString" : false
      }
    },
    "CardPresentType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Unknown, 1 CardPresent, 2 CardNotPresent, 3 ManualEntry, 4 ECommerce, 5 EMVFallback",
      "enum" : [ "0", "1", "2", "3", "4", "5" ],
      "x-ms-enum" : {
        "name" : "CardPresentType",
        "modelAsString" : false
      }
    },
    "TransactionType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Deposit, 1 Refund, 2 Chargeback, 3 ACHFee, 4 ACHDeposit, 5 MonthlyFee, 6 ChargebackReversal, 7 Decline, 8 AVSOnly, 9 Unknown, 10 AdjustmentFrom, 11 AdjustmentTo, 12 ACHReturn, 13 Fee (CSV Fee Upload entry)",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12" ],
      "x-ms-enum" : {
        "name" : "TransactionType",
        "modelAsString" : false
      }
    },
    "TransactionStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 New, 1 Submitted, 2 Funded, 3 AuthOnly, 4 Rejected, 5 Declined, 6 Conveyed, 7 Held, 8 Captured, 9 Processing, 10 Incomplete",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" ],
      "x-ms-enum" : {
        "name" : "TransactionStatus",
        "modelAsString" : false
      }
    },
    "FeeProfileType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 FlatRate, 1 InterchangePlus",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "FeeProfileType",
        "modelAsString" : false
      }
    },
    "FeeBillingType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Monthly, 1 PerTransaction, 2 FeeTransactions",
      "enum" : [ "0", "1", "2" ],
      "x-ms-enum" : {
        "name" : "FeeBillingType",
        "modelAsString" : false
      }
    },
    "Note" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "message" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "$ref" : "#/definitions/NoteType"
        },
        "createdBy" : {
          "type" : "string"
        }
      }
    },
    "ACHStandardEntryClassCodeRequest" : {
      "type" : "string",
      "description" : "Allowed Values: ARC, BOC, CBR, CCD, CIE, COR, CTX, IAT, MTE, PBR, POP, POS, PPD, RCk, TEL, WEB",
      "example" : "POP"
    },
    "ACHStandardEntryClassCodeResponse" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 ARC, 1 BOC, 2 CBR, 3 CCD, 4 CIE, 5 COR, 6 CTX, 7 IAT, 8 MTE, 9 PBR, 10 POP, 11 POS, 12 PPD, 13 RCK, 14 TEL, 15 WEB",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15" ],
      "x-ms-enum" : {
        "name" : "ACHStandardEntryClassCode",
        "modelAsString" : false
      }
    },
    "EcheckAccountTypeRequest" : {
      "type" : "string",
      "description" : "Allowed Values: Checking, Savings",
      "example" : "Checking"
    },
    "BankAccountTypeRequest" : {
      "type" : "string",
      "description" : "Allowed Values: Checking, ForBenefitOf, PayFacOperating, Savings, ExternallyManagedChecking",
      "example" : "Checking"
    },
    "BankAccountTypeResponse" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Checking, 1 ForBenefitOf, 2 PayFacOperating, 3 Savings, 4 ExternallyManagedChecking",
      "enum" : [ "0", "1", "2", "3" ],
      "x-ms-enum" : {
        "name" : "BankAccountType",
        "modelAsString" : false
      }
    },
    "ECheckEntryModeRequest" : {
      "type" : "string",
      "description" : "Allowed Values: Keyed, MagneticInkCharacterRecognition, Image",
      "example" : "Keyed"
    },
    "ECheckEntryModeResponse" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Keyed, 1 MagneticInkCharacterRecognition, 2 Image",
      "enum" : [ "0", "1", "2" ],
      "x-ms-enum" : {
        "name" : "ECheckEntryMode",
        "modelAsString" : false
      }
    },
    "ECheck" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "standardEntryClass" : {
          "$ref" : "#/definitions/ACHStandardEntryClassCodeResponse"
        },
        "checkNumber" : {
          "type" : "integer",
          "format" : "int32"
        },
        "accountNumberFirstThree" : {
          "type" : "string",
          "maxLength" : 3
        },
        "routingNumber" : {
          "type" : "string",
          "maxLength" : 9
        },
        "bankAccountType" : {
          "$ref" : "#/definitions/BankAccountTypeResponse"
        },
        "entryMode" : {
          "$ref" : "#/definitions/ECheckEntryModeResponse"
        }
      }
    },
    "ECheckRequest" : {
      "type" : "object",
      "required" : [ "accountNumberFirstThree", "bankAccountType", "checkNumber", "entryMode", "routingNumber", "standardEntryClass" ],
      "properties" : {
        "standardEntryClass" : {
          "$ref" : "#/definitions/ACHStandardEntryClassCodeRequest"
        },
        "checkNumber" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 101
        },
        "accountNumberFirstThree" : {
          "type" : "string",
          "example" : "123",
          "maxLength" : 3
        },
        "routingNumber" : {
          "type" : "string",
          "example" : "123456789",
          "maxLength" : 9
        },
        "bankAccountType" : {
          "$ref" : "#/definitions/EcheckAccountTypeRequest"
        },
        "entryMode" : {
          "$ref" : "#/definitions/ECheckEntryModeRequest"
        }
      }
    },
    "TransactionDiscretionaryField" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transactionId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "key" : {
          "type" : "string"
        },
        "value" : {
          "type" : "string"
        }
      }
    },
    "Transaction" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the transaction was settled on the card networks."
        },
        "arn" : {
          "type" : "string"
        },
        "authorizedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the tranaction was authorized on the Front-End processing platform."
        },
        "authorizationCode" : {
          "type" : "string"
        },
        "authorizationSource" : {
          "type" : "string"
        },
        "authorizationResponse" : {
          "type" : "string"
        },
        "authorizationAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "transactionAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The gross amount of the transaction."
        },
        "submerchantBatchId" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string"
        },
        "cardBin" : {
          "type" : "string"
        },
        "cardLastFour" : {
          "type" : "string"
        },
        "cardType" : {
          "type" : "string"
        },
        "network" : {
          "$ref" : "#/definitions/CardNetwork"
        },
        "cardPresentType" : {
          "$ref" : "#/definitions/CardPresentType"
        },
        "issuingBankID" : {
          "type" : "string"
        },
        "interchangeFee" : {
          "type" : "number",
          "format" : "double",
          "description" : "The Interchange fee amount reported by Processor."
        },
        "networkFees" : {
          "type" : "number",
          "format" : "double"
        },
        "processorFee" : {
          "type" : "number",
          "format" : "double",
          "description" : "The fee amount assessed by the Processor."
        },
        "assessmentFee" : {
          "type" : "number",
          "format" : "double",
          "description" : "The Assessment fee amount charged by MasterCard and Visa, reported by Processor."
        },
        "payfacFee" : {
          "type" : "number",
          "format" : "double",
          "description" : "The fee charged to merchant by Infinicept client. Calculated on import using merchant Fee Profile information and reported by Infinicept."
        },
        "chargebackFee" : {
          "type" : "number",
          "format" : "double",
          "description" : "The fee charged to submerchant by Infinicept client for Chargeback money movement. Calculated using merchant Fee Profile information and reported by Infinicept."
        },
        "commissionFee" : {
          "type" : "number",
          "format" : "double"
        },
        "sourceDataEventId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "processorMID" : {
          "type" : "string"
        },
        "transactionType" : {
          "$ref" : "#/definitions/TransactionType"
        },
        "onHold" : {
          "type" : "boolean"
        },
        "terminalId" : {
          "type" : "string"
        },
        "fundingStatus" : {
          "$ref" : "#/definitions/TransactionStatus"
        },
        "feeFundingStatus" : {
          "$ref" : "#/definitions/TransactionStatus"
        },
        "processorTransactionID" : {
          "type" : "string"
        },
        "submerchantName" : {
          "type" : "string"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantDbaName" : {
          "type" : "string"
        },
        "submerchantStatus" : {
          "$ref" : "#/definitions/AccountStatus"
        },
        "processedDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time when the transaction was sent for processing. WorldPay is set by file import date. Adyen, TSYS, and First Data provides in file."
        },
        "settlementDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. Is updated to the Date/Time of each funding attempt."
        },
        "extendedData" : {
          "type" : "string"
        },
        "interchangeCode" : {
          "type" : "string"
        },
        "interchangeLevel" : {
          "type" : "string",
          "readOnly" : true
        },
        "feeSettlementDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time when the calculated fees associated with the transaction is submitted for funding. This can be the same as the settlementDate with daily or in the future if monthly assessment is configured."
        },
        "gatewayReferenceId" : {
          "type" : "string"
        },
        "partnerReferenceId" : {
          "type" : "string"
        },
        "tipAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "totalAssessedFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The fees assessed on the transaction. PayfacFee + ChargebackFee + InterchangeFee + ProcessorFee + AssessmentFee",
          "readOnly" : true
        },
        "totalFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The Sum of all fees regardless of who assesses/bills the fee for this Transaction. PayfacFee + ChargebackFee + InterchangeFee + ProcessorFee + AssessmentFee"
        },
        "netAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "TransactionAmount - TotalAssessedFees.",
          "readOnly" : true
        },
        "depositIds" : {
          "type" : "array",
          "description" : "The Deposits the transaction is associated with upon each funding attempt.",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "feeProfileType" : {
          "$ref" : "#/definitions/FeeProfileType"
        },
        "feeBillingType" : {
          "$ref" : "#/definitions/FeeBillingType"
        },
        "merchantIdentifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MerchantIdentifierKeyValuePair"
          }
        },
        "notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        },
        "adjustmentId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isForced" : {
          "type" : "boolean"
        },
        "cardExpirationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "eCheck" : {
          "$ref" : "#/definitions/ECheck"
        },
        "achReturnFee" : {
          "type" : "number",
          "format" : "double"
        },
        "transactionSettledDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the transaction was settled on the card brand networks and deposited into the FBO account."
        },
        "transactionDiscretionaryFields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionDiscretionaryField"
          }
        },
        "isExternallyFunded" : {
          "type" : "boolean"
        },
        "fundingReturnMessage" : {
          "type" : "string"
        },
        "fundingReturnDate" : {
          "type" : "string",
          "format" : "date-time"
        }
      }
    },
    "TransactionRequest" : {
      "type" : "object",
      "required" : [ "fundingStatus", "processorMID", "submerchantId", "transactionAmount", "transactionDate", "transactionType" ],
      "properties" : {
        "transactionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the transaction occurred with the merchant."
        },
        "authorizationCode" : {
          "type" : "string",
          "example" : "494760"
        },
        "transactionAmount" : {
          "type" : "number",
          "format" : "double",
          "example" : 123.52
        },
        "currency" : {
          "type" : "string",
          "example" : "USD"
        },
        "processorMID" : {
          "type" : "string",
          "example" : "12345678901"
        },
        "transactionType" : {
          "type" : "string",
          "example" : "Deposit",
          "description" : "Allowed Values: Deposit, ACHReturn"
        },
        "network" : {
          "type" : "string",
          "example" : "ACH",
          "description" : "Allowed Values: ACH"
        },
        "onHold" : {
          "type" : "boolean",
          "example" : false
        },
        "fundingStatus" : {
          "type" : "string",
          "example" : "AuthOnly",
          "description" : "Allowed Values: AuthOnly"
        },
        "processorTransactionID" : {
          "type" : "string",
          "example" : "4143549629467750"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 17
        },
        "settlementDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "The Date/Time the transaction money is deposited into the Merchant account after settlement."
        },
        "gatewayReferenceId" : {
          "type" : "string",
          "example" : "6916943229421087"
        },
        "partnerReferenceId" : {
          "type" : "string",
          "example" : "3143549123467487"
        },
        "isForced" : {
          "type" : "boolean",
          "example" : false
        },
        "cardExpirationDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "eCheck" : {
          "$ref" : "#/definitions/ECheckRequest"
        },
        "achReturnFee" : {
          "type" : "number",
          "format" : "double"
        },
        "transactionSettledDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "transactionDiscretionaryFields" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionDiscretionaryField"
          }
        },
        "isExternallyFunded" : {
          "type" : "boolean"
        }
      }
    },
    "Chargeback" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transactionId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Unique chargeback transaction identifier."
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchant" : {
          "type" : "string"
        },
        "submerchantDbaName" : {
          "type" : "string"
        },
        "statusId" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Integer version of Infinicept Status. WorldPay and First Data Expected Values: 1, 4, 11, 12. Adyen Expected Values: 12, 14, 15."
        },
        "statusName" : {
          "type" : "string",
          "description" : "The Infinicept Status Name.WorldPay and First Data Expected Values: New, Won, PreArbitrationArbitration, RetrievalNew. Adyen Expected Values: RetrievalNew, Chargeback, ChargebackReversal"
        },
        "status" : {
          "$ref" : "#/definitions/ChargebackStatus"
        },
        "workflowStatus" : {
          "$ref" : "#/definitions/ChargebackWorkflowStatus"
        },
        "fee" : {
          "type" : "number",
          "format" : "double",
          "description" : "Fee assessed by the Pay Fac from the Submerchant Fee Profile."
        },
        "caseID" : {
          "type" : "string",
          "description" : "The unique identifier assigned by the Processor."
        },
        "reasonCode" : {
          "type" : "string",
          "description" : "Reason Code provided by the Card Network."
        },
        "message" : {
          "type" : "string",
          "description" : "Reason Message provided by the Card Network."
        },
        "chargebackType" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "The financial status of the chargeback's money movement. Expected Values: 40 or N: Informational, 41: From Submerchant, 42: To Submerchant, F: To or From Submerchant."
        },
        "chargebackDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date the Chargeback record was generated at the Card Network."
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Date the Chargeback record was created in Infinicept."
        },
        "merchantActionDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "For future use."
        },
        "merchantActionUser" : {
          "type" : "string",
          "description" : "For future use."
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "merchantIdentifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MerchantIdentifierKeyValuePair"
          }
        },
        "notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChargebackNote"
          }
        },
        "notesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chargebackDocuments" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ChargebackDocument"
          }
        },
        "chargebackDocumentsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transaction" : {
          "$ref" : "#/definitions/Transaction"
        },
        "notificationsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "familyID" : {
          "type" : "string",
          "description" : "For future use."
        },
        "replyByDate" : {
          "type" : "string",
          "format" : "date",
          "description" : "Deadline for repsonse. If no due date is provided from Card Network, then Visa is Received Date + 20 calendar days and Mastercard/AMEX/Discover is Received Date + 30 calendar days."
        }
      }
    },
    "ChargebackPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Chargeback"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "DocumentUpload" : {
      "type" : "object",
      "properties" : {
        "documentType" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fileName" : {
          "type" : "string"
        },
        "documentTypeName" : {
          "type" : "string"
        },
        "fileByteArray" : {
          "type" : "string",
          "format" : "byte",
          "pattern" : "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "AddNote" : {
      "type" : "object",
      "properties" : {
        "noteType" : {
          "$ref" : "#/definitions/NoteType"
        },
        "message" : {
          "type" : "string"
        },
        "username" : {
          "type" : "string"
        }
      }
    },
    "ChargebackHistoryType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 StatusChange, 1 Notification",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "ChargebackHistoryType",
        "modelAsString" : false
      }
    },
    "ChargebackHistoryRecord" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "$ref" : "#/definitions/ChargebackHistoryType"
        },
        "userName" : {
          "type" : "string"
        },
        "userEmail" : {
          "type" : "string"
        },
        "oldStatus" : {
          "$ref" : "#/definitions/ChargebackStatus"
        },
        "newStatus" : {
          "$ref" : "#/definitions/ChargebackStatus"
        },
        "oldWorkflowStatus" : {
          "$ref" : "#/definitions/ChargebackWorkflowStatus"
        },
        "newWorkflowStatus" : {
          "$ref" : "#/definitions/ChargebackWorkflowStatus"
        }
      }
    },
    "FundingDepositStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 New, 1 Submitted, 2 Funded, 3 PartiallyRejected, 4 Rejected",
      "enum" : [ "0", "1", "2", "3", "4" ],
      "x-ms-enum" : {
        "name" : "FundingDepositStatus",
        "modelAsString" : false
      }
    },
    "FundingDepositType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Transactions, 1 Fees, 2 BankTransfers, 3 ChargebackToOperatingTransfer 4 AchReturnToOperatingTransfer.",
      "enum" : [ "0", "1", "2", "3", "4" ],
      "x-ms-enum" : {
        "name" : "FundingDepositType",
        "modelAsString" : false
      }
    },
    "FundingTiming" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 NextDay, 1 SameDay",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "FundingTiming",
        "modelAsString" : false
      }
    },
    "SubmerchantDeposit" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fundingDepositId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantDbaName" : {
          "type" : "string"
        },
        "submerchantLegalEntityName" : {
          "type" : "string"
        },
        "merchantIdentifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MerchantIdentifierKeyValuePair"
          }
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "$ref" : "#/definitions/FundingDepositStatus"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "salesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "salesTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "refundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refundTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "chargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chargebackTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "adjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "adjustmentTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "grossDepositAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of settled amounts on the transactions in the submerchant deposit."
        },
        "interchangeFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of Interchange fee amounts reported by Processor in the submerchant deposit."
        },
        "networkFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The"
        },
        "processorFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of fee amounts assessed by the Processor in the submerchant deposit. Adyen Only (Markup)."
        },
        "chargebackFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of fee amounts charged to submerchant by Infinicept client for Chargeback money movement in the submerchant deposit. Calculated using merchant Fee Profile information and reported by Infinicept."
        },
        "achReturnFees" : {
          "type" : "number",
          "format" : "double"
        },
        "commissionFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "Adyen Only (Commission)."
        },
        "assessmentFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of Assessment fee amounts charged by MasterCard and Visa, reported by Processor in the submerchant deposit. Adyen Only (Scheme Fees)."
        },
        "payfacRevenue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of fees due to the Pay Fac based on the transactions in the Submerchant deposit."
        },
        "totalFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of all fees assessed on transactions in the submerchant deposit at the time of calculation."
        },
        "pendingFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "PayfacRevenue - TotalFees"
        },
        "netDepositAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of payout amounts in the submerchant deposit. grossDepositAmount - payfacRevenue"
        },
        "type" : {
          "$ref" : "#/definitions/FundingDepositType"
        },
        "timing" : {
          "$ref" : "#/definitions/FundingTiming"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        }
      }
    },
    "FundingDeposit" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "$ref" : "#/definitions/FundingDepositStatus"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "salesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "salesTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "refundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refundTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "chargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chargebackTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "adjustmentCount" : {
          "type" : "integer",
          "format" : "int32",
          "description" : "Infinicept Manual Adjustments count."
        },
        "adjustmentTotal" : {
          "type" : "number",
          "format" : "double",
          "description" : "Infinicept Manual Adjustments amount total."
        },
        "grossDepositAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregete of all settled amounts on the Submerchant transactions in the deposit."
        },
        "interchangeFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of Interchange fee amounts reported by Processor for all submerchants in the deposit."
        },
        "networkFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "Not currently used."
        },
        "processorFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of fee amounts assessed by the Processor for all Submerchants in the deposit. Adyen Only (Markup)."
        },
        "assessmentFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of Assessment fee amounts charged by MasterCard and Visa, reported by Processor for all Submerchants in the deposit. Adyen Only (Scheme Fees)."
        },
        "commissionFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "Adyen Only (Commission)."
        },
        "chargebackFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of fees charged to all Submerchants by Infinicept client for Chargeback money movement in the deposit. Calculated using merchant Fee Profile information and reported by Infinicept."
        },
        "achReturnFees" : {
          "type" : "number",
          "format" : "double"
        },
        "payfacRevenue" : {
          "type" : "number",
          "format" : "double",
          "description" : "The fee charged to all Submerchants by Infinicept client in the deposit. Calculated on import using merchant Fee Profile information and reported by Infinicept."
        },
        "totalFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate sum of all fees assessed on Submerchant transaction in the dpeosit at the time of calculation."
        },
        "pendingFees" : {
          "type" : "number",
          "format" : "double",
          "description" : "PayfacRevenue - TotalFees"
        },
        "netDepositAmount" : {
          "type" : "number",
          "format" : "double",
          "description" : "The aggregate of all Submerchant payout amounts in the deposit. grossDepositAmount - payfacRevenue."
        },
        "type" : {
          "$ref" : "#/definitions/FundingDepositType"
        },
        "submerchantDeposits" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmerchantDeposit"
          }
        }
      }
    },
    "FundingDepositPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FundingDeposit"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "SubmerchantDepositPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmerchantDeposit"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "TenantBankAccountResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "label" : {
          "type" : "string"
        },
        "accountType" : {
          "$ref" : "#/definitions/BankAccountTypeResponse"
        }
      }
    },
    "BankAccountTransfer" : {
      "type" : "object",
      "required" : [ "amount", "destinationAccountId", "sourceAccountId" ],
      "properties" : {
        "sourceAccountId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "destinationAccountId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "memo" : {
          "type" : "string"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "DailySubmerchantDepositSummary" : {
      "type" : "object",
      "properties" : {
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantDbaName" : {
          "type" : "string"
        },
        "submerchantLegalName" : {
          "type" : "string"
        },
        "payfacRevenue" : {
          "type" : "number",
          "format" : "double"
        },
        "interchangeFeesDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "payfacFeesDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "networkFeesDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "totalFeesDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "interchangeFeesTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "payfacFeesTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "processorFeesTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "networkFeesTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "submerchantCreditDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "submerchantDebitDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "grossSettlement" : {
          "type" : "number",
          "format" : "double"
        },
        "netSettlement" : {
          "type" : "number",
          "format" : "double"
        },
        "settlementAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "depositCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "depositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "refundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "chargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "adjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "adjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "totalFees" : {
          "type" : "number",
          "format" : "double"
        },
        "pendingFees" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "DailySubmerchantDepositSummaryPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/DailySubmerchantDepositSummary"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "ReturnType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 NotificationOfChange, 1 Other",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "ReturnType",
        "modelAsString" : false
      }
    },
    "ReturnAddendaInfo" : {
      "type" : "object",
      "properties" : {
        "addendaInfo" : {
          "type" : "string"
        },
        "correctAccountNumber" : {
          "type" : "string"
        },
        "correctRoutingNumber" : {
          "type" : "string"
        },
        "correctTransactionCode" : {
          "type" : "string"
        }
      }
    },
    "FundingReturn" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "sourceDataEventId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "fee" : {
          "type" : "number",
          "format" : "double"
        },
        "submittedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "returnedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "type" : {
          "$ref" : "#/definitions/ReturnType"
        },
        "reasonCode" : {
          "type" : "string"
        },
        "reasonDescription" : {
          "type" : "string"
        },
        "providerReasonCode" : {
          "type" : "string"
        },
        "providerReasonDescription" : {
          "type" : "string"
        },
        "depositId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantDepositId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "processorMid" : {
          "type" : "string"
        },
        "accountNumber" : {
          "type" : "string"
        },
        "submerchantName" : {
          "type" : "string"
        },
        "submerchantDbaName" : {
          "type" : "string"
        },
        "corrections" : {
          "$ref" : "#/definitions/ReturnAddendaInfo"
        },
        "status" : {
          "type" : "string"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        }
      }
    },
    "FundingReturnPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/FundingReturn"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "CardNetworkNullable" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Unknown, 1 Visa, 2 MasterCard, 3 AmericanExpress, 4 Discover, 5 JCB, 6 Europay, 7 PrivateLabel, 8 PayPal, 9 JackHenryACH, 10 DinersClubInternational, 11 Debit, 12 ACH, 13 ChinaUnionPay, 14 Adjustment",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14" ],
      "x-ms-enum" : {
        "name" : "CardNetwork",
        "modelAsString" : false
      }
    },
    "FundingStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 New, 1 Submitted, 2 Funded, 4 Held, 8 FeesSubmitted, 16 FeesFunded, 32 Rejected, 64 Authorized, 128 Conveyed, 256 Declined, 512 Settled, 1024 Captured, 2048 Processing, 4096 Incomplete, 8192 FeesRejected",
      "enum" : [ "0", "1", "2", "4", "8", "16", "32", "64", "128", "256", "512", "1024", "2048", "4096", "8192" ],
      "x-ms-enum" : {
        "name" : "FundingStatus",
        "modelAsString" : false
      }
    },
    "SubmerchantNetworkTransactionStatusSetting" : {
      "type" : "object",
      "properties" : {
        "network" : {
          "$ref" : "#/definitions/CardNetworkNullable"
        },
        "appliesToAllNetworks" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "status" : {
          "$ref" : "#/definitions/FundingStatus"
        },
        "statusLabel" : {
          "type" : "string",
          "readOnly" : true
        }
      }
    },
    "AmexStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Conveyed, 1 OptBlue",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "AmexStatus",
        "modelAsString" : false
      }
    },
    "Assessor" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 PayFac, 1 Processor, 2 Reporting Only",
      "enum" : [ "0", "1", "2" ],
      "x-ms-enum" : {
        "name" : "Assessor",
        "modelAsString" : false
      }
    },
    "FeeProfile" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "$ref" : "#/definitions/FeeProfileType"
        },
        "discountRate" : {
          "type" : "number",
          "format" : "double"
        },
        "transactionFee" : {
          "type" : "number",
          "format" : "double"
        },
        "cardNotPresentFee" : {
          "type" : "number",
          "format" : "double"
        },
        "cardNotPresentRate" : {
          "type" : "number",
          "format" : "double"
        },
        "debitCardTransactionFee" : {
          "type" : "number",
          "format" : "double"
        },
        "debitCardTransactionRate" : {
          "type" : "number",
          "format" : "double"
        },
        "monthlyFee" : {
          "type" : "number",
          "format" : "double"
        },
        "visaMastercardRate" : {
          "type" : "number",
          "format" : "double"
        },
        "visaMastercardFee" : {
          "type" : "number",
          "format" : "double"
        },
        "discoverFee" : {
          "type" : "number",
          "format" : "double"
        },
        "discoverRate" : {
          "type" : "number",
          "format" : "double"
        },
        "amexRate" : {
          "type" : "number",
          "format" : "double"
        },
        "amexFee" : {
          "type" : "number",
          "format" : "double"
        },
        "chargebackFee" : {
          "type" : "number",
          "format" : "double",
          "description" : "The fee charged to Submerchant by Infinicept client for Chargeback money movement. Calculated using merchant Fee Profile information and reported by Infinicept."
        },
        "gatewayFee" : {
          "type" : "number",
          "format" : "double"
        },
        "batchFee" : {
          "type" : "number",
          "format" : "double"
        },
        "returnFee" : {
          "type" : "number",
          "format" : "double"
        },
        "feeBilling" : {
          "$ref" : "#/definitions/FeeBillingType"
        },
        "amexStatus" : {
          "$ref" : "#/definitions/AmexStatus"
        },
        "chargePayfacFeeOnRefunds" : {
          "type" : "boolean"
        },
        "assessExclusivelyPerItemAmountOnRefunds" : {
          "type" : "boolean"
        },
        "interchangeFeeAssessor" : {
          "$ref" : "#/definitions/Assessor"
        },
        "processorFeeAssessor" : {
          "$ref" : "#/definitions/Assessor"
        },
        "assessmentFeeAssessor" : {
          "$ref" : "#/definitions/Assessor"
        },
        "commissionFeeAssessor" : {
          "$ref" : "#/definitions/Assessor"
        },
        "achTransactionFee" : {
          "type" : "number",
          "format" : "double"
        },
        "achTransactionRate" : {
          "type" : "number",
          "format" : "double"
        },
        "achReturnFee" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "ACHFeeType" : {
      "type" : "integer",
      "format" : "int32",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6" ],
      "x-ms-enum" : {
        "name" : "ACHFeeType",
        "modelAsString" : false
      }
    },
    "ACHFee" : {
      "type" : "object",
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/ACHFeeType"
        },
        "transactionFee" : {
          "type" : "number",
          "format" : "double"
        },
        "representmentFee" : {
          "type" : "number",
          "format" : "double"
        },
        "returnFee" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "SubmerchantAddress" : {
      "type" : "object",
      "properties" : {
        "line1" : {
          "type" : "string"
        },
        "line2" : {
          "type" : "string"
        },
        "city" : {
          "type" : "string"
        },
        "countryRegion" : {
          "type" : "string"
        },
        "stateProvince" : {
          "type" : "string"
        },
        "postalCode" : {
          "type" : "string"
        }
      }
    },
    "FundingSchedule" : {
      "type" : "string",
      "enum" : [ "PayfacFunded", "ProcessorFunded", "PayFacFundedSameDay" ],
      "x-ms-enum" : {
        "name" : "FundingSchedule",
        "modelAsString" : false
      }
    },
    "Terminal" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "terminalId" : {
          "type" : "string"
        }
      }
    },
    "UserRole" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Submerchant, 1 SystemAdministrator, 2 SalesAgent, 3 Analyst, 4 Accountant, 5 SupportUser, 6 ImpersonationUser",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6" ],
      "x-ms-enum" : {
        "name" : "UserRole",
        "modelAsString" : false
      }
    },
    "UserStatus" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Active, 1 Deactivated",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "UserStatus",
        "modelAsString" : false
      }
    },
    "Permission" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 FundingProcessCenterManualAdjustmentsCreate, 1 SubmerchantDetailsRead, 2 SubmerchantDetailsUpdate, 3 SubmerchantPortalRead, 4 TransactionsRead, 5 TransactionsExport, 6 ChargebacksRead, 7 ChargebacksUploadDocument, 8 ChargebacksCreateNote, 9 ChargebacksCreateNotification, 10 FundingProcessCenterPendingDepositsRead, 11 FundingProcessCenterPendingDepositsHoldReleaseFunds, 12 FundingProcessCenterPendingDepositsSubmitToProcessor, 13 FundingProcessCenterManualAdjustmentsRead, 14 ExceptionsReportingRead, 15 ExceptionsReportingHoldRelease, 16 ExceptionsReportingCreateNote, 17 DepositsRead, 18 DepositsExport, 19 UsersRead, 20 UsersCreate, 21 UsersUpdate, 22 SettingsCreateChargebackNotificationTemplate, 23 SubmerchantPortalAccountDetailsRead, 24 SubmerchantPortalTransactionsRead, 25 SubmerchantPortalChargebacksRead, 26 SubmerchantPortalDepositsRead, 27 SubmerchantPortalChargebacksCreateNote, 28 SubmerchantPortalChargebacksUploadDocument",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28" ],
      "x-ms-enum" : {
        "name" : "Permission",
        "modelAsString" : false
      }
    },
    "User" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "userRole" : {
          "$ref" : "#/definitions/UserRole"
        },
        "name" : {
          "type" : "string"
        },
        "emailAddress" : {
          "type" : "string"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "lastLoginDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "status" : {
          "$ref" : "#/definitions/UserStatus"
        },
        "submerchantIds" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "userPermissions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Permission"
          }
        },
        "doNotInheritChildMerchants" : {
          "type" : "boolean"
        }
      }
    },
    "Submerchant" : {
      "type" : "object",
      "properties" : {
        "networkFundingSettings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmerchantNetworkTransactionStatusSetting"
          }
        },
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "legalEntityName" : {
          "type" : "string"
        },
        "dbaName" : {
          "type" : "string"
        },
        "businessType" : {
          "type" : "string"
        },
        "contactPhone" : {
          "type" : "string"
        },
        "backgroundCheckResults" : {
          "type" : "string"
        },
        "feeProfile" : {
          "$ref" : "#/definitions/FeeProfile"
        },
        "achFees" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ACHFee"
          }
        },
        "locations" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Submerchant"
          }
        },
        "parent" : {
          "$ref" : "#/definitions/Submerchant"
        },
        "merchantIdentifiers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "accountStatus" : {
          "$ref" : "#/definitions/AccountStatus"
        },
        "createdDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "createdBy" : {
          "type" : "string"
        },
        "modifiedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "modifiedBy" : {
          "type" : "string"
        },
        "taxIdNumber" : {
          "type" : "string"
        },
        "businessAddressId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "businessAddress" : {
          "$ref" : "#/definitions/SubmerchantAddress"
        },
        "useDifferentMailingAddress" : {
          "type" : "boolean"
        },
        "mailingAddressId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "mailingAddress" : {
          "$ref" : "#/definitions/SubmerchantAddress"
        },
        "timeZone" : {
          "type" : "string"
        },
        "websiteAddress" : {
          "type" : "string"
        },
        "principalFirstName" : {
          "type" : "string"
        },
        "principalMiddleName" : {
          "type" : "string"
        },
        "principalLastName" : {
          "type" : "string"
        },
        "principalAddressId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "principalAddress" : {
          "$ref" : "#/definitions/SubmerchantAddress"
        },
        "bankAddressId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "bankAddress" : {
          "$ref" : "#/definitions/SubmerchantAddress"
        },
        "principalPhone" : {
          "type" : "string"
        },
        "annualCreditCardSalesVolume" : {
          "type" : "integer",
          "format" : "int32"
        },
        "hasAcceptedCreditCards" : {
          "type" : "boolean"
        },
        "bankAccount" : {
          "type" : "string"
        },
        "bankRouting" : {
          "type" : "string"
        },
        "merchantCategoryCode" : {
          "type" : "string"
        },
        "principalEmail" : {
          "type" : "string"
        },
        "approvedMonthlyVolume" : {
          "type" : "number",
          "format" : "double"
        },
        "approvedAverageTicketAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "approvedCardNotPresentPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "approvedCardPresentPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "fundingSchedule" : {
          "$ref" : "#/definitions/FundingSchedule"
        },
        "terminals" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Terminal"
          }
        },
        "users" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/User"
          }
        }
      }
    },
    "SubmerchantMIDSummary" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "dbaName" : {
          "type" : "string"
        },
        "mid" : {
          "type" : "string"
        },
        "legalEntityName" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        }
      }
    },
    "SubmerchantMIDSummaryPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmerchantMIDSummary"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "UpdateSubmerchantIDs" : {
      "type" : "object",
      "properties" : {
        "mid" : {
          "type" : "string"
        },
        "tiDs" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "additionalIdentifiers" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        }
      }
    },
    "AccountStatusNullable" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Active, 1 HoldAllFunding, 2 Canceled, 3 WaitingForFirstTrans, 4 WaitingForFirstAuth, 99 Deleted",
      "enum" : [ "0", "1", "2", "3", "4", "99" ],
      "x-ms-enum" : {
        "name" : "AccountStatus",
        "modelAsString" : false
      }
    },
    "BankAccountMetadata" : {
      "type" : "object",
      "properties" : {
        "externalReferenceId" : {
          "type" : "string"
        },
        "currency" : {
          "type" : "string"
        }
      }
    },
    "BankAccount" : {
      "type" : "object",
      "properties" : {
        "accountNumber" : {
          "type" : "string"
        },
        "routingNumber" : {
          "type" : "string"
        },
        "accountType" : {
          "$ref" : "#/definitions/BankAccountTypeRequest"
        },
        "metadata" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BankAccountMetadata"
          }
        }
      }
    },
    "BoardSubmerchantRequest" : {
      "type" : "object",
      "required" : [ "annualCreditCardSalesVolume", "bankAccountEncrypted", "bankRoutingEncrypted", "businessAddress", "contactPhone", "createdBy", "dbaName", "inheritFeeProfileFromParent", "legalEntityName", "principalAddress", "principalEmail", "principalFirstName", "principalLastName", "principalPhone", "taxIdNumber", "useDifferentMailingAddress" ],
      "properties" : {
        "legalEntityName" : {
          "type" : "string"
        },
        "dbaName" : {
          "type" : "string"
        },
        "businessType" : {
          "type" : "string"
        },
        "contactPhone" : {
          "type" : "string"
        },
        "backgroundCheckResults" : {
          "type" : "string"
        },
        "inheritFeeProfileFromParent" : {
          "type" : "boolean"
        },
        "feeProfile" : {
          "$ref" : "#/definitions/FeeProfile"
        },
        "achFees" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ACHFee"
          }
        },
        "createdBy" : {
          "type" : "string"
        },
        "taxIdNumber" : {
          "type" : "string"
        },
        "businessAddress" : {
          "$ref" : "#/definitions/SubmerchantAddress"
        },
        "useDifferentMailingAddress" : {
          "type" : "boolean"
        },
        "mailingAddress" : {
          "$ref" : "#/definitions/SubmerchantAddress"
        },
        "timeZone" : {
          "type" : "string"
        },
        "maxTransactionAmount" : {
          "type" : "integer",
          "format" : "int64"
        },
        "websiteAddress" : {
          "type" : "string"
        },
        "principalFirstName" : {
          "type" : "string"
        },
        "principalMiddleName" : {
          "type" : "string"
        },
        "principalLastName" : {
          "type" : "string"
        },
        "principalAddress" : {
          "$ref" : "#/definitions/SubmerchantAddress"
        },
        "merchantCategoryCode" : {
          "type" : "string"
        },
        "principalPhone" : {
          "type" : "string"
        },
        "annualCreditCardSalesVolume" : {
          "type" : "integer",
          "format" : "int32"
        },
        "bankAccountEncrypted" : {
          "type" : "string"
        },
        "bankRoutingEncrypted" : {
          "type" : "string"
        },
        "principalEmail" : {
          "type" : "string"
        },
        "accountStatus" : {
          "$ref" : "#/definitions/AccountStatusNullable"
        },
        "merchantIdentifiers" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/MerchantIdentifierKeyValuePair"
          }
        },
        "autoHoldAllTransactions" : {
          "type" : "boolean"
        },
        "networkTransactionStatusSettings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmerchantNetworkTransactionStatusSetting"
          }
        },
        "fundingSchedule" : {
          "$ref" : "#/definitions/FundingSchedule"
        },
        "bankAccounts" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/BankAccount"
          }
        }
      }
    },
    "ProcessorFundingProgramNullable" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 NextDay, 1 SameDay",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "ProcessorFundingProgram",
        "modelAsString" : false
      }
    },
    "ProcessorFundingProgram" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 NextDay, 1 SameDay",
      "enum" : [ "0", "1" ],
      "x-ms-enum" : {
        "name" : "ProcessorFundingProgram",
        "modelAsString" : false
      }
    },
    "PendingDeposit" : {
      "type" : "object",
      "properties" : {
        "submerchant" : {
          "$ref" : "#/definitions/Submerchant"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fundingProgram" : {
          "$ref" : "#/definitions/ProcessorFundingProgram"
        },
        "transactionsSettledDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "inQueueTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedFeesAmount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "PendingDepositPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PendingDeposit"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "PendingDepositsOverview" : {
      "type" : "object",
      "properties" : {
        "fundingProgram" : {
          "$ref" : "#/definitions/ProcessorFundingProgram"
        },
        "inQueueSubmerchantsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldSubmerchantsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedSubmerchantsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "settledDatesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedFeesAmount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "PendingDepositDailyOverview" : {
      "type" : "object",
      "properties" : {
        "fundingProgram" : {
          "$ref" : "#/definitions/ProcessorFundingProgram"
        },
        "inQueueSubmerchantsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldSubmerchantsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedSubmerchantsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "settledDatesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "settledDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "inQueueTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedAchReturnsAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedAchReturnsCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedFeesAmount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "PendingDepositDailyOverviewPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PendingDepositDailyOverview"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "PendingDepositSubmerchantOverview" : {
      "type" : "object",
      "properties" : {
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantDbaName" : {
          "type" : "string"
        },
        "submerchantMid" : {
          "type" : "string"
        },
        "fundingProgram" : {
          "$ref" : "#/definitions/ProcessorFundingProgram"
        },
        "inQueueTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "inQueueAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "inQueueNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "heldAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "heldNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedTransactionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedGrossDepositAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedSalesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedSalesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedRefundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedRefundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedChargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedChargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedAdjustmentCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "rejectedAdjustmentAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedFeesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "rejectedNetDepositAmount" : {
          "type" : "number",
          "format" : "double"
        }
      }
    },
    "PendingDepositSubmerchantOverviewPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/PendingDepositSubmerchantOverview"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "PendingDepositsFilter" : {
      "type" : "object",
      "properties" : {
        "submerchantId" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "fundingProgram" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ProcessorFundingProgramNullable"
          }
        },
        "transactionsSettledDate" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          }
        }
      }
    },
    "ExceptionLogic" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Unknown, 1 FirstTransactionProcessed, 2 TransactionOverMaximum, 3 DailyDepositOverMaximum, 4 ForeignCardPercentageOverLimit, 5 MultipleRefundsToSameCard, 6 ExcessiveRefundVolumeInBatch, 7 ExcessiveRefundCountPercentage, 8 ExcessivePercentageOfKeyedTransactions, 9 OutOfPatternLowDollarTransaction, 10 RefundGreaterThanMaxAllowed, 11 RefundWithoutOffsettingSale, 12 ExcessiveForcedTransactions, 13 FallbackTransaction, 14 HighPercentageOfChargebacks, 15 LargeChargeback, 16 RefundAfterChargeback, 17 ProcessingApproachingApprovedMonthlyLimit, 18 ExcessiveProcessing, 19 DormantSubmerchantActive, 20 MultipleAuthorizationsToSameCard, 21 MultipleSettledTransactionsToSameCard, 22 IndividualTicketGreaterThanDollarAmount, 23 HighPercentageOfRetrievals, 24 LargeRetrieval, 25 SameDollarAmountInBatch, 26 TotalDailyAuthorizationCountOverMaximum, 27 DeclinedDailyAuthorizationOverMaximumPercent, 28 LowDollarBatch, 29 AuthorizationDuringAbnormalHours, 30 TransactionDuringAbnormalHours, 31 OutOfPatternDailyAuthorizationCount",
      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" ],
      "x-ms-enum" : {
        "name" : "ExceptionLogic",
        "modelAsString" : false
      }
    },
    "RiskExceptionType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Transaction, 1 Batch, 2 Chargeback, 3 Submerchant",
      "enum" : [ "0", "1", "2", "3" ],
      "x-ms-enum" : {
        "name" : "RiskExceptionType",
        "modelAsString" : false
      }
    },
    "RiskException" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "resolved" : {
          "type" : "boolean"
        },
        "submerchantName" : {
          "type" : "string"
        },
        "submerchantMID" : {
          "type" : "string"
        },
        "batchId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "batchDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "riskExceptionName" : {
          "type" : "string"
        },
        "riskExceptionDescription" : {
          "type" : "string"
        },
        "exceptionDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "riskExceptionType" : {
          "$ref" : "#/definitions/RiskExceptionType"
        },
        "numberOfTransactions" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "numberOfAuthorizations" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "total" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "refundCount" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        },
        "notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        },
        "affectedTransactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        },
        "affectedChargebacks" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Chargeback"
          }
        }
      }
    },
    "RiskExceptionPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RiskException"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "SubmerchantRiskExceptionBatchSummary" : {
      "type" : "object",
      "properties" : {
        "submerchant" : {
          "$ref" : "#/definitions/Submerchant"
        },
        "status" : {
          "$ref" : "#/definitions/TransactionStatus"
        },
        "totalExceptionCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfBatchExceptions" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfTransactionExceptions" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfSubmerchantExceptions" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfChargebackExceptions" : {
          "type" : "integer",
          "format" : "int32"
        },
        "numberOfAuthorizationExceptions" : {
          "type" : "integer",
          "format" : "int32"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "settlementTotal" : {
          "type" : "number",
          "format" : "double",
          "readOnly" : true
        },
        "transactionExceptionTotal" : {
          "type" : "number",
          "format" : "double"
        },
        "largestTransactionExceptionAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "salesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "authorizationCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "salesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "authAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "refundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "chargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "refundPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "fallBackcount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "fallbackPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "foreignCardPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "chargebackPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "keyedPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "declinedPercentage" : {
          "type" : "number",
          "format" : "double"
        },
        "notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        }
      }
    },
    "SubmerchantRiskExceptionBatchSummaryPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubmerchantRiskExceptionBatchSummary"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "RiskExceptionDefinitionSummary" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "riskExceptionType" : {
          "$ref" : "#/definitions/RiskExceptionType"
        },
        "displayName" : {
          "type" : "string"
        },
        "status" : {
          "$ref" : "#/definitions/TransactionStatus"
        },
        "exceptionDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "amount" : {
          "type" : "number",
          "format" : "double"
        },
        "thresholdData" : {
          "type" : "string"
        }
      }
    },
    "RiskExceptionTransaction" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "arn" : {
          "type" : "string"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "submerchantStatus" : {
          "$ref" : "#/definitions/AccountStatus"
        },
        "transactionAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "status" : {
          "$ref" : "#/definitions/TransactionStatus"
        },
        "transactionDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "fundedDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "notes" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Note"
          }
        },
        "cardLastFour" : {
          "type" : "string"
        },
        "cardBin" : {
          "type" : "string"
        },
        "authorizationCode" : {
          "type" : "string"
        },
        "declined" : {
          "type" : "boolean",
          "readOnly" : true
        },
        "network" : {
          "$ref" : "#/definitions/CardNetwork"
        },
        "transactionType" : {
          "$ref" : "#/definitions/TransactionType"
        },
        "exceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RiskExceptionDefinitionSummary"
          }
        }
      }
    },
    "SubmerchantRiskExceptionBatchDetail" : {
      "type" : "object",
      "properties" : {
        "submerchant" : {
          "$ref" : "#/definitions/Submerchant"
        },
        "salesCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "authorizationCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "refundCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "chargebackCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "salesAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "authorizationAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "refundAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "chargebackAmount" : {
          "type" : "number",
          "format" : "double"
        },
        "date" : {
          "type" : "string",
          "format" : "date-time"
        },
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RiskExceptionTransaction"
          }
        },
        "exceptions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RiskExceptionDefinitionSummary"
          }
        }
      }
    },
    "RiskExceptionDefinition" : {
      "type" : "object",
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "activateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "deactivateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "isActive" : {
          "type" : "boolean"
        },
        "isTenantDefinition" : {
          "type" : "boolean"
        },
        "exceptionLogicId" : {
          "$ref" : "#/definitions/ExceptionLogic"
        },
        "thresholdData" : {
          "type" : "string"
        }
      }
    },
    "UpsertDefinitionRequest" : {
      "type" : "object",
      "required" : [ "exceptionLogicId" ],
      "properties" : {
        "displayName" : {
          "type" : "string"
        },
        "description" : {
          "type" : "string"
        },
        "submerchantId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "isPayfac" : {
          "type" : "boolean"
        },
        "activateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "deactivateDate" : {
          "type" : "string",
          "format" : "date-time"
        },
        "exceptionLogicId" : {
          "$ref" : "#/definitions/ExceptionLogic"
        },
        "thresholdValue" : {
          "type" : "string"
        }
      }
    },
    "RiskExceptionDefinitionPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/RiskExceptionDefinition"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "FundingSystem" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Test, 1 VantivDynamicPayout, 2 WellsFargoACH, 3 Adyen",
      "enum" : [ "0", "1", "2", "3" ],
      "x-ms-enum" : {
        "name" : "FundingSystem",
        "modelAsString" : false
      }
    },
    "TransactionProcessor" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 Test, 1 Vantiv, 2 Tsys, 3 FirstData, 4 Adyen",
      "enum" : [ "0", "1", "2", "3", "4" ],
      "x-ms-enum" : {
        "name" : "TransactionProcessor",
        "modelAsString" : false
      }
    },
    "Tenant" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "tenantSlug" : {
          "type" : "string"
        },
        "canSubmitFundingInstructions" : {
          "type" : "boolean"
        },
        "exceptionReportingEnabled" : {
          "type" : "boolean"
        },
        "parentId" : {
          "type" : "integer",
          "format" : "int32"
        },
        "childTenants" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Tenant"
          }
        },
        "fundingSystem" : {
          "$ref" : "#/definitions/FundingSystem"
        },
        "transactionProcessor" : {
          "$ref" : "#/definitions/TransactionProcessor"
        }
      }
    },
    "PaginatedTransactionResponse" : {
      "type" : "object",
      "properties" : {
        "transactions" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        },
        "totalRequestedTransactions" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "TransactionFilter" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "arn" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "authorizationCode" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "authorizationSource" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "authorizationResponse" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "authorizationAmount" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "transactionAmount" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "submerchantBatchId" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "currency" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "cardBin" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "cardLastFour" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "cardType" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "network" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/CardNetwork"
          }
        },
        "issuingBankID" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "interchangeFee" : {
          "type" : "array",
          "description" : "The Interchange fee amount reported by Processor.",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "networkFees" : {
          "type" : "array",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "processorFee" : {
          "type" : "array",
          "description" : "The fee amount assessed by the Processor. Adyen Only (Markup).",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "assessmentFee" : {
          "type" : "array",
          "description" : "The Assessment fee amount charged by MasterCard and Visa, reported by Processor. Adyen Only (Scheme Fee).",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "payfacFee" : {
          "type" : "array",
          "description" : "The fee charged to merchant by Infinicept client. Calculated on import using merchant Fee Profile information and reported by Infinicept.",
          "items" : {
            "type" : "number",
            "format" : "double"
          }
        },
        "sourceDataEventId" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "processorMID" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "transactionType" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionType"
          }
        },
        "onHold" : {
          "type" : "array",
          "items" : {
            "type" : "boolean"
          }
        },
        "terminalId" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "fundingStatus" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/TransactionStatus"
          }
        },
        "processorTransactionID" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "submerchantName" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "submerchantId" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "submerchantDbaName" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "extendedData" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "interchangeCode" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "interchangeLevel" : {
          "type" : "array",
          "readOnly" : true,
          "items" : {
            "type" : "string"
          }
        },
        "gatewayReferenceId" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "partnerReferenceId" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        },
        "depositId" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "authorizedDate" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "payfacSettlementDate" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "settlementDate" : {
          "type" : "array",
          "items" : {
            "type" : "string",
            "format" : "date-time"
          }
        },
        "adjustmentId" : {
          "type" : "array",
          "items" : {
            "type" : "integer",
            "format" : "int32"
          }
        },
        "discretionaryField" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "TransactionPaginatedResponse" : {
      "type" : "object",
      "properties" : {
        "data" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/Transaction"
          }
        },
        "totalRequestedDataCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "currentPage" : {
          "type" : "integer",
          "format" : "int32"
        },
        "pageSize" : {
          "type" : "integer",
          "format" : "int32"
        },
        "totalPages" : {
          "type" : "integer",
          "format" : "int32",
          "readOnly" : true
        }
      }
    },
    "FundableTransactionCount" : {
      "type" : "object",
      "properties" : {
        "transferToCount" : {
          "type" : "integer",
          "format" : "int32"
        },
        "transferFromCount" : {
          "type" : "integer",
          "format" : "int32"
        }
      }
    },
    "BackofficeWebhookType" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "1 TransactionsImported",
      "enum" : [ "1" ],
      "x-ms-enum" : {
        "name" : "BackofficeWebhookType",
        "modelAsString" : false
      }
    },
    "AuthenticationMethod" : {
      "type" : "integer",
      "format" : "int32",
      "description" : "0 None, 1 SharedSecretPlaintext, 2 Basic",
      "enum" : [ "0", "1", "2" ],
      "x-ms-enum" : {
        "name" : "AuthenticationMethod",
        "modelAsString" : false
      }
    },
    "WebhookSubscriptionResponse" : {
      "type" : "object",
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int32"
        },
        "type" : {
          "$ref" : "#/definitions/BackofficeWebhookType"
        },
        "destinationURL" : {
          "type" : "string"
        },
        "authenticationMethod" : {
          "$ref" : "#/definitions/AuthenticationMethod"
        }
      }
    },
    "WebhookAuthenticationData" : {
      "type" : "object",
      "required" : [ "password", "sharedSecret", "username" ],
      "properties" : {
        "method" : {
          "$ref" : "#/definitions/AuthenticationMethod"
        },
        "username" : {
          "type" : "string"
        },
        "password" : {
          "type" : "string"
        },
        "sharedSecret" : {
          "type" : "string"
        }
      }
    },
    "WriteWebhookSubscription" : {
      "type" : "object",
      "required" : [ "authenticationMethod" ],
      "properties" : {
        "type" : {
          "$ref" : "#/definitions/BackofficeWebhookType"
        },
        "destinationURL" : {
          "type" : "string"
        },
        "authenticationMethod" : {
          "$ref" : "#/definitions/WebhookAuthenticationData"
        }
      }
    }
  },
  "parameters" : {
    "AuthKeyId" : {
      "name" : "x-AuthenticationKeyId",
      "in" : "header",
      "required" : true,
      "type" : "string"
    },
    "AuthKeyValue" : {
      "name" : "x-AuthenticationKeyValue",
      "in" : "header",
      "required" : true,
      "type" : "string"
    },
    "Tenant" : {
      "name" : "tenantId",
      "in" : "path",
      "required" : true,
      "type" : "string"
    },
    "AccountStatus" : {
      "name" : "AccountStatus",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "Active", "HoldAllFunding", "Canceled", "WaitingForFirstTrans", "WaitingForFirstAuth", "Deleted" ]
      },
      "collectionFormat" : "multi"
    },
    "AdjustmentType" : {
      "name" : "AdjustmentType",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "TransferTo", "TransferFrom" ]
      },
      "collectionFormat" : "multi"
    },
    "CardNetwork" : {
      "name" : "Network",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "Unknown", "Visa", "MasterCard", "AmericanExpress", "Discover", "JCB", "Europay", "PrivateLabel", "PayPal", "JackHenryACH", "DinersClubInternational", "Debit", "ACH", "ChinaUnionPay", "Adjustment" ]
      },
      "collectionFormat" : "multi"
    },
    "ChargebackWorkflowStatus" : {
      "name" : "status",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "enum" : [ "Unassigned", "Assigned", "SubmerchantContacted", "DocumentationReceived", "DocumentationSentToProcessor", "CaseClosed" ]
    },
    "ChargebackStatus" : {
      "name" : "status",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "enum" : [ "New", "RetrievalNew", "Chargeback", "ChargebackReversal" ]
    },
    "DateFilter" : {
      "name" : "DateFilter",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
    },
    "TransactionDateFilter" : {
      "name" : "TransactionDateFilter",
      "in" : "query",
      "description" : "The date the transaction record was created in Infinicept.",
      "required" : false,
      "type" : "string",
      "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
    },
    "ChargebackDateFilter" : {
      "name" : "ChargebackDateFilter",
      "in" : "query",
      "description" : "The date the chargeback record was created in Infinicept.",
      "required" : false,
      "type" : "string",
      "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
    },
    "LastUpdatedDateFilter" : {
      "name" : "LastUpdatedDateFilter",
      "in" : "query",
      "description" : "The date the chargeback record was updated in the Infinicept portal.",
      "required" : false,
      "type" : "string",
      "enum" : [ "All", "Today", "Yesterday", "ThisWeek", "ThisMonth", "ThisYear", "LastYear", "DateRange", "SpecificDate" ]
    },
    "DateFilterType" : {
      "name" : "DateFilterType",
      "in" : "query",
      "description" : "<b>ActivityDate:</b> Date/Time the transaction occurred with the merchant. \n\n <b>SettlementDate:</b> (TransactionSettlementDate in transaction record) Date/Time the transaction money is moved to the FBO/Submerchants accounts after settlement. Usually the same as ProcessedDate but not always. \n\n <b>SubmittedDate:</b> (SettlementDate in transaction record) Date/Time when funding instructions for this transaction were sent to processor to move purchase/refund money from FBO to submerchant accounts. \n\n <b>ProcessedDate:</b> Date/Time when the transaction was sent for processing. This has nothing to do with money movement, just information.",
      "required" : false,
      "type" : "string",
      "enum" : [ "ActivityDate", "SettlementDate", "SubmittedDate", "ProcessedDate" ]
    },
    "FromDate" : {
      "name" : "FromDate",
      "in" : "query",
      "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
      "required" : false,
      "type" : "string",
      "format" : "date-time"
    },
    "ToDate" : {
      "name" : "ToDate",
      "in" : "query",
      "description" : "<b>DateFilter:DateRange</b> is required when using this field.",
      "required" : false,
      "type" : "string",
      "format" : "date-time"
    },
    "SpecificDate" : {
      "name" : "SpecificDate",
      "in" : "query",
      "description" : "<b>DateFilter:SpecificDate</b> is required when using this field.",
      "required" : false,
      "type" : "string",
      "format" : "date-time"
    },
    "ExceptionLogic" : {
      "name" : "ExceptionLogicType",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "Unknown", "FirstTransactionProcessed", "TransactionOverMaximum", "DailyDepositOverMaximum", "ForeignCardPercentageOverLimit", "MultipleRefundsToSameCard", "ExcessiveRefundVolumeInBatch", "ExcessiveRefundCountPercentage", "ExcessivePercentageOfKeyedTransactions", "OutOfPatternLowDollarTransaction", "RefundGreaterThanMaxAllowed", "RefundWithoutOffsettingSale", "ExcessiveForcedTransactions", "FallbackTransaction", "HighPercentageOfChargebacks", "LargeChargeback", "RefundAfterChargeback", "ProcessingApproachingApprovedMonthlyLimit", "ExcessiveProcessing", "DormantSubmerchantActive", "MultipleAuthorizationsToSameCard", "MultipleSettledTransactionsToSameCard", "IndividualTicketGreaterThanDollarAmount", "HighPercentageOfRetrievals", "LargeRetrieval", "SameDollarAmountInBatch", "TotalDailyAuthorizationCountOverMaximum", "DeclinedDailyAuthorizationOverMaximumPercent", "LowDollarBatch", "AuthorizationDuringAbnormalHours", "TransactionDuringAbnormalHours", "OutOfPatternDailyAuthorizationCount" ]
      },
      "collectionFormat" : "multi"
    },
    "FundingDepositStatus" : {
      "name" : "Status",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "New", "Submitted", "Funded", "PartiallyRejected", "Rejected" ]
      },
      "collectionFormat" : "multi"
    },
    "FundingDepositType" : {
      "name" : "Type",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "Transactions", "Fees", "BankTransfers", "ChargebackToOperatingTransfer", "AchReturnToOperatingTransfer" ]
      },
      "collectionFormat" : "multi"
    },
    "FundingSchedule" : {
      "name" : "fundingSchedule",
      "in" : "query",
      "required" : false,
      "type" : "string",
      "items" : { }
    },
    "ProcessorFundingProgram" : {
      "name" : "FundingProgram",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "NextDay", "SameDay" ]
      },
      "collectionFormat" : "multi"
    },
    "ReturnType" : {
      "name" : "Type",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "New", "Submitted", "Funded", "PartiallyRejected", "Rejected" ]
      },
      "collectionFormat" : "multi"
    },
    "TransactionType" : {
      "name" : "TransactionType",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "Deposit", "Refund", "Chargeback", "ACHFee", "ACHDeposit", "MonthlyFee", "ChargebackReversal", "Decline", "AVSOnly", "Unknown", "AdjustmentFrom", "AdjustmentTo", "ACHReturn", "Fee (CSV Fee Upload entry)" ]
      },
      "collectionFormat" : "multi"
    },
    "TransactionStatus" : {
      "name" : "FundingStatus",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "New", "Submitted", "Funded", "AuthOnly", "Rejected", "Declined", "Conveyed", "Held", "Captured", "Processing", "Incomplete" ]
      },
      "collectionFormat" : "multi"
    },
    "ReturnStatus" : {
      "name" : "ReturnStatus",
      "in" : "query",
      "required" : false,
      "type" : "array",
      "items" : {
        "type" : "string",
        "enum" : [ "OnHold", "Resolved", "NotificationOfChange" ]
      },
      "collectionFormat" : "multi"
    }
  },
  "x-readme" : {
    "samples-languages" : [ "curl", "csharp", "ruby", "php", "java", "python" ]
  }
}